[너무 배부른 월요일]
Oracle 할 때는 서비스 확인 하기
-무조건 켜져 있어야 함
OracleServiceORCL
OracleOraDb11g_home1TNSListener

UML diagram 그리는 프로그램이 대게 비쌈

과제: 8,9,10

*SQL기초 캡처해서 저장 SQL
->D:\공부정보\DB

*SQL 명령어는 대소문자를 구분 안하지만 value는 값을 구분 한다. 

*;세미콜론 만나기 전까지 명령어는 끝나지 않습니다.

*주석은 '--'

*전체 값 검색할 때는 *FROM

***(DDL 안됨)메모리에만 입력한걸 디스크에 저장 하고 나가야 함
COMMIT;

***(DDL 안됨)내가 데이터 다 날려버리면 데이터 복구 ROLLBACK
ROLLBACK;

*계산을 했을 때 (null)값이 나온다는 것은 내가 입력한 value 값 중 null값이 없는지 확이해야한다.

*UPDATE와 INSERT에  차이
INSERT는 레코드의 값을 입력하는 거
UPDATE는 이미 입력된 레코드에서 값 하나만 바꾸는 거

*조건이 y년 m 

*값이 null 값이면 연산자가 안먹힌다. 그래서 null값을 0으로 대치하고 시작해야한다.
-nvl => null값을 다른 숫자로 대치해서 계산 하겠습니다.
nvl(math,0)

*number 는 기본이 10자리 숫자

*주의 테이블을 만들고 데이터 형을 변경하기 위해서는 ALTER MODIFY를 사용 하는 걸로

*오라클은 저장하는 내용을 다 대문자로 만들어서 저장한다.
#학점관리 : student_score

학번	id	char(10) //우리학교 학번은 열자리	
이름	name	varchar2(10)
국어	kor	number(3)//최대 점수는 100점 3자리 -999~+999 
영어	eng	number(3)
총점	total	number(3)
평균	avg	number(5,2)//최대 점수는 100점 3자리 소수점 2자리까지 표현

(1) DDL  데이터 정의어 테이블 만들기
CREATE TABLE student_score //테이블 만들기 : student_score
 id char(10),
 name varchar2(10),
 kor number(3),
 eng number(3),
 total number(3),
 avg number(5,2)
(2) 테이블 확인하기
DESC student_score;
(3) 테이블 내에서 추가,변경,삭제
--수학점수 추가
ALTER TABLE student_score 
    ADD(math number(3));

(4)DML 데이터 조작어 
:테이블을 만들었으면 테의블 안에 데이터를 집어 넣어야 한다
 
1> INSERT는 내가 입력한 테이블형식에 레코드(값)를 입력한다. (한줄에 레코드 생성)
//여기서 입력안 한 값은 null로 잡힌다.
//null로 잡힌다고 해서 레코드에 메모리가 안잡히는것이 아니라 자동으로 잡힌다.
//그래서 UPDATE로 값을 수정 할 수 있다.
 --학번이 2000인 홍길자 학생의 국어와 수학점수를 각각 50, 80 입력하기
INSERT    INTO   student_score(id,name,kor,math) VALUES('1602000','홍길자',50,80);
 
2>검색(SELECT)
SELECT * FROM student_score;
 //*FROM은 전체 검색
 
3>삭제(DELETE)
 ** where문 꼭 확인
DELETE FROM student_score WHEREcondition;
 -데이터 전부 삭제 
DELETE FROM student_score;
 -홍길자 데이터 삭제
DELETE FROM student_score where name='홍길자';
  
4>UPDATE 생성된레코드에 갑 하나만 바꾸는 것 
--홍길동 학생의 학번을 1000으로 수정 해주세요
UPDATE student_score SET id='1000' where name='홍길동';
--2000번 학생 영어 점수를 80로 입력//말이 입력이지 UPDATE 입니다.
//null 값에 값을 집어 넣는 거도 업데이트
--UPDATE는 이미 입력된(INSERT로 입력된) 레코드에서 값 하나만 바꾸는거
UPDATE student_score SET eng='80' where id='2000';
--***평균 구하기 (영어+국어+수학)/3
--where을 입력안하면 모든 레코드의 값이 전부 바뀐다.
--nvl => null값을 다른 숫자로 대치해서 계산 하겠습니다.
UPDATE student_score SET avg=(kor+eng+nvl(math,0))/3;

(5)테이블 복사
--테이블 복사하기 emp에 든 내용을 복사 해왔습니다.
//복사하기도 CREATE 입니다.
CREATE TABLE emp_copy
AS SELECT empno, ename, sal, comm,hiredate,deptno 
FROM emp;
//네이버 카페에 연습 문제 (스샷찍어놓음)


#info_test 와 데이터베이스를 연동 값을 집어 넣을거다 
0406_scott에 입력저장 
테이블 명 : info_tab

이름	name	char(5)	NN
아이디 	jumin	char(14)	UQ
전화	tel	varchar2(20)	PK
성별	gender	varchar2(4)	CK('남자','여자'),기본값'남자'
나이	age	number		
출신지	home	varchar2(20)

(1)제약조건(Constraint)
1>테이블 만들 때 제약조건 줘야함
-NOT NULL꼭 필수입력 사항을 받을 때 
name char(10) NOT NULL,
-PRIMARY KEY는 무조건 꼭꼭 만들어 줘야한다. 그래야 검색 할 수있다.
CONSTRAINT pk_info_tel PRIMARY KEY (tel);
//주의  pk가 연결 될 때 , pk는 여러개를 묶어서도 가능 
CONSTRAINT pk_info_tel PRIMARY KEY (tel,home));
CHECK 제한적인 입력처리 (남자만 입력하게 하기위해서)
DFAULT 입력값이 없어서 기본값을 줄 때 ( null 일때 주어지는 기본값을 정해준다.)

-ex)
CREATE TABLE info_tab(
name char(10) NOT NULL,
jumin char(14),
tel varchar2(20),
gender varchar2(4) DEFAULT '남자',
age number,
home varchar2(20),--제약조건
CONSTRAINT pk_info_tel PRIMARY KEY (tel)
,CONSTRAINT uq_info_jumin UNIQUE (jumin)
,CONSTRAINT check_gender CHECK (gender IN('남자','여자'))
);

***UNIQUE와 PK의 차이점 UNIQUE는 값을 안줘도 되지만 PK는 꼭 필요하다
2>테이블이 이미 만들어져 있고 제약조건 추가할 때
-UNIQUE방식
ALTER  TABLE   table_name
ADD  CONSTRAINTS  pk_name  PRIMARY  KEY ( column_name );
-UNIQUE적용
ALTER TABLE info_tab ADD CONSTRAINT uq_info_jumin UNIQUE(jumin);
-CHECK적용
//CHECK 제약 조건 테이블 생성 후에 주기
ALTER TABLE info_tab ADD CONSTRAINT ck_info_gender CHECK(gender IN('남성','여성'));
-DEFAULT
//DFAULT는 기존에 있는 gender의 데이터형을 바꿔줘야한다.
AlTER TABLE info_tab MODIFY gender varchar2(4)  DEFAULT '남성';
//DEFAULT 값이 지정되도 잘 저장되는지 입력해보기
INSERT INTO info_tab(name, tel,gender)
VALUES('홍순이','051-5555','여성');
//null 값일 때 default 값이 잘나오는 지 입력해보기
INSERT INTO info_tab(name, tel)
VALUES('홍갑이','061-666666');

3>제약조건 확인
SELECT constraint_name, constraint_type
FROM user_constraints 
where table_name='INFO_TAB';
//오라클은 저장할 때 다 대문자로 저장하니깐 info_tab이 아닌 INFO_TAB으로 검색해야한다.

(2)FOREIGN KEY 외래키 (중요)
: 테이블 과 테이블 연결 시킨거
ex) scott에 DEPT 테이블이 부서정보를 EMP에 DEPTNO를 연결  시켜줌
1>만드는 방법
ALTER  TABLE   table_name
ADD  CONSTRAINTS  fk_name  FOREIGN  KEY ( column_name )
REFERENCES  ref_table_name ( ref_column_name );
2>적용
ALTER TABLE emp_copy 
ADD CONSTRAINT fk_emp_copy_depno FOREIGN KEY(DEPTNO)
REFERENCES dept(deptno);
//REFERENCES는 머라 연결 시킬건지 

(3)제약조건 삭제,활성화
//연결된거 없을 때
ALTER  TABLE   table_name 
DROP  CONSTRAINT   constraint_name [CASCADE];
//활성화
ALTER  TABLE table_name 
DISABLE/ENABLE   CONSTRAINT   constraint_name [CASCADE];

(4)ddl TRUNCATE
delete는 1을 삭제하면 다음 값을 입력하면 저장공간은 그대로 있곡 2로 입력이 되는데
truncate는 1을 삭제하면 다음 값을 입력할 때 1로 입력된다.
ex)TRUNCATE TABLE sawon;